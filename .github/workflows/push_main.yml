name: Push and deployement

on:
  push:
    branches:
    - test-pipeline
  pull_request:
    branches:
    - test-pipeline

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG_STATUS: ${{ secrets.DEBUG_STATUS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install staticfiles
        run: python manage.py collectstatic --noinput

      - name: Run tests and ensure that the coverage is at least 80%.
        run: pytest --cov-fail-under=80

  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run linter Flake8
        run: flake8

  docker-build:
    needs: [linter, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:latest

  AWS-deployement:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
    - name: install docker-compose-plugin
      run: |
        sudo yum update
        sudo yum install docker-compose-plugin

    - name: executing remote ssh commands using key
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_TOKEN }}
        script: |
          docker-compose down
          docker system prune -a --volumes && docker rmi -f $(docker images -q)
          docker-compose up -d
